name: CI
run-name: ${{ github.actor }} run CI
env:
  CC: clang
  CXX: clang++
on: [push]
jobs:
  Build:
    name: Build Project
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - run: sudo apt-get update
      - run: sudo apt-get install g++ clang make cmake wget libgtest-dev
      
      - name: Build
        run: mkdir -p build && cd build && cmake .. && make

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: ./build/
          retention-days: 5
    
  Tests:
    name: Tests 
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: ./build

      - run: sudo apt-get update
      - run: sudo apt-get install wget

      - name: Start server
        run: ./build/http-server &
      
      - name: Smoke test server
        shell: bash
        run: |
          if ! wget --timeout=5 --tries=1 --spider http://localhost:7777/; then
            exit 1
          fi
      
      - name: Unit Test
        run: ./build/http-client UnitTest

      - name: Stop server
        if: failure() || success()
        run: pkill http-server

  Debpkj:
    name: Create deb package 
    runs-on: ubuntu-latest
    needs: Tests
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: ./build

      - name: Create debpkj
        run: sh create_debpkg.sh
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: ./http-server-client-dcsa.deb
  
  push_to_docker_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: Debpkj
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        
      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: app
          path: ./http-server-client-dcsa.deb

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: nikonoff/http-server

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}